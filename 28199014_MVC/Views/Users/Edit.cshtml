@model _28199014_MVC.Models.User

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>


<script language="javascript">
    $('#birthday').datepicker();
</script>
<section id="contact" style="padding-top:0px; padding-bottom:50px">
    <div class="container">
        <div class="row">

            <!-- Section title
            ================================================== -->
            <div class="col-md-offset-2 col-md-8 col-sm-offset-2 col-sm-8" style="margin-top:100px">
                <div class="section-title">

                    <h1 class="heading" runat="server">Edit User</h1>
                    <p style="color:rgb(108, 105, 105);">Shall I compare thee to a summer's day? Thou art more lovely and more temperate.</p>
                </div>
            </div>
        </div>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label col-md-4", @style = "color: rgb(221, 97, 42); font-size: 19px" })
                    <div style="margin-left:200px">
                        @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control", @id = "datapicker" } })
                        @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.usertype, htmlAttributes: new { @class = "control-label col-md-4", @style = "color: rgb(221, 97, 42); font-size: 19px" })
                    <div style="margin-left:200px">
                        @Html.EditorFor(model => model.usertype, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.usertype, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-4", @style = "color: rgb(221, 97, 42); font-size: 19px" })
                    <div style="margin-left:200px">
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-4", @style = "color: rgb(221, 97, 42); font-size: 19px" })
                    <div style="margin-left:200px">
                        @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.birthday, htmlAttributes: new { @class = "control-label col-md-4", @style = "color: rgb(221, 97, 42); font-size: 19px" })
                    <div style="margin-left:200px">
                        @Html.EditorFor(model => model.birthday, "birthday", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.birthday, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.age, htmlAttributes: new { @class = "control-label col-md-4", @style = "color: rgb(221, 97, 42); font-size: 19px" })
                    <div style="margin-left:200px">
                        @Html.EditorFor(model => model.age, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-4", @style = "color: rgb(221, 97, 42); font-size: 19px" })
                    <div style="margin-left:200px">
                        @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-4", @style = "color: rgb(221, 97, 42); font-size: 19px" })
                    <div style="margin-left:200px">
                        @Html.DropDownListFor(model => model.gender, new SelectList(new List<SelectListItem>() { new SelectListItem() { Text = "", Value = "1" },
           new SelectListItem() { Text = "F", Value = "2" },new SelectListItem() { Text = "M", Value = "3" }}, string.Empty, "Text"))
                        @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.catsize, htmlAttributes: new { @class = "control-label col-md-4", @style = "color: rgb(221, 97, 42); font-size: 19px" })
                    <div style="margin-left:200px">
                        @Html.DropDownListFor(model => model.catsize, new SelectList(new List<SelectListItem>() { new SelectListItem() { Text = "", Value = "1" },
           new SelectListItem() { Text = "small", Value = "2" },new SelectListItem() { Text = "medium", Value = "3" },new SelectListItem() { Text = "good", Value = "4" } }, string.Empty, "Text"))
                        @Html.ValidationMessageFor(model => model.catsize, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.catfur, htmlAttributes: new { @class = "control-label col-md-4", @style = "color: rgb(221, 97, 42); font-size: 19px" })
                    <div style="margin-left:200px">
                        @Html.DropDownListFor(model => model.catfur, new SelectList(new List<SelectListItem>() { new SelectListItem() { Text = "", Value = "1" },
           new SelectListItem() { Text = "longhair", Value = "2" },new SelectListItem() { Text = "shorthair", Value = "3" },new SelectListItem() { Text = "hairless", Value = "1" } }, string.Empty, "Text"))
                        @Html.ValidationMessageFor(model => model.catfur, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.petkeeping, htmlAttributes: new { @class = "control-label col-md-4", @style = "color: rgb(221, 97, 42); font-size: 19px" })
                    <div style="margin-left:200px">
                        @Html.DropDownListFor(model => model.petkeeping, new SelectList(new List<SelectListItem>() { new SelectListItem() { Text = "", Value = "1" },
           new SelectListItem() { Text = "True", Value = "2" },new SelectListItem() { Text = "False", Value = "3" }}, string.Empty, "Text"))
                        @Html.ValidationMessageFor(model => model.petkeeping, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.url, htmlAttributes: new { @class = "control-label col-md-4", @style = "color: rgb(221, 97, 42); font-size: 19px" })
                    <div style="margin-left:200px">
                        @Html.EditorFor(model => model.url, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.url, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.uphoto, htmlAttributes: new { @class = "control-label col-md-4", @style = "color: rgb(221, 97, 42); font-size: 19px" })
                    <div style="margin-left:200px">
                        @Html.EditorFor(model => model.uphoto, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.uphoto, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
</section>

<div>
    @Html.ActionLink("Back to List", "SearchIndex")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
